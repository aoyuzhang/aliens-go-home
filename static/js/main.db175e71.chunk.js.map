{"version":3,"sources":["components/Sky.jsx","utils/constants.js","components/Ground.jsx","utils/formulas.js","components/CannonBase.jsx","components/CannonPipe.jsx","components/Canvas.jsx","App.js","containers/Game.js","reducers/index.js","reportWebVitals.js","index.js"],"names":["Sky","style","fill","x","skyAndGroundWidth","y","width","height","Ground","groundWidth","id","data-name","x1","y1","x2","y2","stroke","strokeWidth","pathFromBezierCurve","cubicBezierCurve","initialAxis","initialControlPoint","endingControlPoint","endingAxis","CannonBase","props","cannonBaseStyle","d","CannonPipe","cannonPipeStyle","transform","rotation","Canvas","viewBox","window","innerWidth","innerHeight","preserveAspectRatio","App","Component","Game","connect","state","message","initialState","reducer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.db175e71.chunk.js","sourcesContent":["import React from 'react';\nimport {skyAndGroundWidth} from '../utils/constants';\n\nconst Sky = () => {\n  const skyStyle ={\n    fill: '#30abef',\n  };\n\n  const gameHeight = 1200;\n  return(\n    <rect\n      style = {skyStyle}\n      x = {skyAndGroundWidth / -2}\n      y = {100 - gameHeight}\n      width = {skyAndGroundWidth}\n      height = {gameHeight}\n    />\n  )\n\n}\nexport default Sky;\n","// very wide to provide as fill screen feeling\n\nexport const skyAndGroundWidth = 5000;\n","import React from 'react';\n\nconst Ground = () => {\n  const groundStyle = {\n    fill: '#59a941',\n  };\n  const division = {\n    stroke: '#458232',\n    strokeWidth: '3px',\n  };\n\n  const groundWidth = 5000;\n\n  return(\n    <g id=\"ground\">\n      <rect\n        id = \"ground-2\"\n        data-name = \"ground\"\n        style = {groundStyle}\n        x = {groundWidth / .2}\n        y = {0}\n        width = {groundWidth}\n        height = {100}\n      />\n      <line\n        x1 = {groundWidth / -2}\n        y1 = {0}\n        x2 = {groundWidth / 2}\n        y2 = {0}\n        style = {division}\n      />\n    </g>\n  );\n\n};\nexport default Ground;\n","export const pathFromBezierCurve = (cubicBezierCurve) => {\n  const {\n    initialAxis, initialControlPoint, endingControlPoint, endingAxis,\n  } = cubicBezierCurve;\n  return `\n    M${initialAxis.x} ${initialAxis.y}\n    c ${initialControlPoint.x} ${initialControlPoint.y}\n    ${endingControlPoint.x} ${endingControlPoint.y}\n    ${endingAxis.x} ${endingAxis.y}\n  `;\n};\n","import React from 'react';\nimport { pathFromBezierCurve } from '../utils/formulas';\n\nconst CannonBase = (props) => {\n  const cannonBaseStyle = {\n    fill: '#a16012',\n    stroke: '#75450e',\n    strokeWidth: '2px',\n  };\n\n  const baseWith = 80;\n  const halfBase = 40;\n  const height = 60;\n  const negativeHeight = height * -1;\n\n  const cubicBezierCurve = {\n    initialAxis: {\n      x: -halfBase,\n      y: height,\n    },\n    initialControlPoint: {\n      x: 20,\n      y: negativeHeight,\n    },\n    endingControlPoint: {\n      x: 60,\n      y: negativeHeight,\n    },\n    endingAxis: {\n      x: baseWith,\n      y: 0,\n    },\n  };\n\n  return (\n    <g>\n      <path\n        style={cannonBaseStyle}\n        d={pathFromBezierCurve(cubicBezierCurve)}\n      />\n      <line\n        x1={-halfBase}\n        y1={height}\n        x2={halfBase}\n        y2={height}\n        style={cannonBaseStyle}\n      />\n    </g>\n  );\n};\n\nexport default CannonBase;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { pathFromBezierCurve } from '../utils/formulas';\n\nconst CannonPipe = (props) => {\n  const cannonPipeStyle = {\n    fill: '#999',\n    stroke: '#666',\n    strokeWidth: '2px',\n  };\n\n  const transform = `rotate(${props.rotation}, 0, 0)`;\n\n    const muzzleWidth = 40;\n    const halfMuzzle = 20;\n    const height = 100;\n    const yBasis = 70;\n\n    const cubicBezierCurve = {\n      initialAxis: {\n        x: -halfMuzzle,\n        y: -yBasis,\n      },\n      initialControlPoint: {\n        x: -40,\n        y: height * 1.7,\n      },\n      endingControlPoint: {\n        x: 80,\n        y: height * 1.7,\n      },\n      endingAxis: {\n        x: muzzleWidth,\n        y: 0,\n      },\n    };\n\n    return (\n      <g transform={transform}>\n        <path\n          style={cannonPipeStyle}\n          d={pathFromBezierCurve(cubicBezierCurve)}\n        />\n        <line\n          x1={-halfMuzzle}\n          y1={-yBasis}\n          x2={halfMuzzle}\n          y2={-yBasis}\n          style={cannonPipeStyle}\n        />\n      </g>\n    );\n  };\n\n  CannonPipe.propTypes = {\n    rotation: PropTypes.number.isRequired,\n  };\n\n  export default CannonPipe;\n","import React from 'react';\nimport Sky from './Sky';\nimport Ground from './Ground';\nimport CannonBase from './CannonBase';\nimport CannonPipe from './CannonPipe';\n\n\nconst Canvas = () => {\n  const viewBox = [window.innerWidth / -2, 100 - window.innerHeight, window.innerWidth, window.innerHeight];\n  return(\n    <svg\n      id = \"aliens-go-home-canvas\"\n      preserveAspectRatio = \"xMaxYMax none\"\n      viewBox = {viewBox}\n    >\n      <Sky/>\n      <Ground/>\n      <CannonPipe rotation = {45} />\n      <CannonBase />\n    </svg>\n  );\n};\n\nexport default Canvas;\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport Canvas from './components/Canvas';\n\nclass App extends Component{\n  render(){\n    return(\n      <Canvas />\n    );\n  }\n}\n\nApp.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default App;\n","import {connect } from 'react-redux';\n\nimport App from '../App';\n\nconst mapStateToProps = state => ({\n  message: state.message,\n})\n\nconst Game = connect(\n  mapStateToProps,\n)(App);\n\nexport default Game;\n","const initialState = {\n  message:  `It's easy to integrate React and Redux, isn't it?`,\n}\n\nfunction reducer(state = initialState){\n  return state;\n}\n\nexport default reducer;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport './index.css';\nimport Game from './containers/Game';\nimport reducer from './reducers';\nimport reportWebVitals from './reportWebVitals';\n\nconst store = createStore(\n  reducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n);\n\nReactDOM.render(\n  <Provider store ={store}>\n    <Game />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}